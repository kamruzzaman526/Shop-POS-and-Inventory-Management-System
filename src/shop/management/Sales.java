/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package shop.management;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import static java.time.LocalDateTime.now;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JMenuBar;

/**
 *
 * @author hp
 */
public class Sales extends javax.swing.JFrame {

    /**
     * Creates new form Sales
     */
    public Sales() {
        initComponents();
        name();
        jTextField1.requestFocus();

        //    tdate();
    }
    Connection connect;
    PreparedStatement pst;
    PreparedStatement prestatement1;
    PreparedStatement prestatement2;
    PreparedStatement prestatement3;
    PreparedStatement prestatement4;
    PreparedStatement prestatement5;
    ResultSet rs;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jSpinner1 = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        lbName = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar2.add(jMenu2);

        jMenu3.setText("File");
        jMenuBar3.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar3.add(jMenu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Shop Management System");

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Product Id");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Product Name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Qty");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Price");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Amount");

        jTextField1.setBackground(new java.awt.Color(0, 204, 0));
        jTextField1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jSpinner1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jSpinner1.setValue(1);
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel2)
                        .addGap(64, 64, 64)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel4)
                        .addGap(110, 110, 110)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addComponent(jButton1)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Total");

        jTextField5.setEditable(false);
        jTextField5.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Pay");

        jTextField6.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField6KeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Remain");

        jTextField7.setEditable(false);
        jTextField7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jLabel6)
                .addContainerGap(72, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(76, 76, 76))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(57, 57, 57))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jTable1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Id", "Product Name", "Qty", "Price", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setText("Bill");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setText("Print Bill");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setText("Reset");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton5.setText("Delete A Row");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jButton6.setText("Add Product");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jButton7.setText("Sales");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton10.setText("Update");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jTextField8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField8.setEnabled(false);
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        lbName.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        lbName.setForeground(new java.awt.Color(0, 153, 153));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setText("|");

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel10.setText("User");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Total Sale");

        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton8.setText("Back");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(66, 66, 66))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1)))
                        .addGap(41, 41, 41)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addGap(5, 5, 5)
                                .addComponent(jLabel9)
                                .addGap(3, 3, 3)
                                .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(35, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(16, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(15, Short.MAX_VALUE)
                                .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jLabel11)
                        .addGap(113, 113, 113)
                        .addComponent(jButton2)
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(346, 346, 346))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton3)
                                        .addComponent(jButton4)
                                        .addComponent(jButton5)
                                        .addComponent(jButton10)
                                        .addComponent(jButton8)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(38, 38, 38))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

//    public void tdate(){
//        Date obj = new Date();
//        String date = obj.toString();
//        jTextField8.setText(date);
//        
//    }
    String unam;

    public void name() {

        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/shop", "root", "");
            pst = connect.prepareStatement("select bt from gtotal where id = 1");

            rs = pst.executeQuery();

            if (rs.next() == false) {
                JOptionPane.showMessageDialog(this, "Username Not Found");
                jTextField1.setText("");
            } else {
                //  String gg = rs.getString("ft");
                String tname = rs.getString("bt");
                unam = tname;

                // jTextField9.setText(tname.trim());
                lbName.setText(tname);
                //  jTextField3.setText(tprice.trim());
            }

//                String total = jTextField5.getText();
//                sumtotal += Integer.parseInt(total.toString());
//                int invoice = String.valueOf(gg)
//                int kprice = Integer.parseInt(jTextField3.getText());
//
//                int tot = kqty * kprice;
////                jTextField4.setText(String.valueOf(tot)); //for int to String
////                jButton1.requestFocus();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        int total = 0;
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String pcode = jTextField1.getText();

            if (jTextField1.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(Sales.this, "Please Enter Product Id");
                jTextField1.grabFocus();
                return;
            }
            try {
                Class.forName("com.mysql.jdbc.Driver");
                connect = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/shop", "root", "");
                pst = connect.prepareStatement("select name, price  from inventory where id = ?");

                pst.setString(1, pcode);
                rs = pst.executeQuery();

                if (rs.next() == false) {
                    JOptionPane.showMessageDialog(this, "Product Id Not Found");
                    jTextField1.setText("");
                } else {
                    String pname = rs.getString("name");
                    String tprice = rs.getString("price");

                    total += Integer.parseInt(tprice.toString());
                    //            System.out.println("total "+ total);

                    jTextField2.setText(pname.trim());
                    jTextField3.setText(tprice.trim());
                }
                int kqty = Integer.parseInt(jSpinner1.getValue().toString());
                int kprice = Integer.parseInt(jTextField3.getText());

                int tot = kqty * kprice;
                jTextField4.setText(String.valueOf(tot)); //for int to String
                jButton1.requestFocus();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ADD) {
            jTextField6.requestFocus();
            jTextField1.setText("");

        }

    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        // TODO add your handling code here:
        int qty = Integer.parseInt(jSpinner1.getValue().toString());
        int price = Integer.parseInt(jTextField3.getText());

        int tot = qty * price;
        jTextField4.setText(String.valueOf(tot));


    }//GEN-LAST:event_jSpinner1StateChanged

    public void qty() {
        int qt = 0;
        int ids = 0;
        int sq = 0;
        int nq = 0;
        int ig = 0;

//        for (int i = 0; i < jTable1.getRowCount(); i++) {
//            qt = Integer.parseInt(jTable1.getValueAt(jTable1.getRowCount(), 3).toString());
//            ids = Integer.parseInt(jTable1.getValueAt(jTable1.getRowCount(), 0).toString());
//
//        }
        int i = jTable1.getRowCount();
        //  String t = jTextField1.getText();
        ids = Integer.parseInt(jTextField1.getText());
        qt = Integer.parseInt(jSpinner1.getValue().toString());
//        qt = Integer.parseInt(jTable1.getValueAt(i, 3).toString());
//          ids = Integer.parseInt(jTable1.getValueAt(jTable1.getRowCount(), 0).toString());
//   //     int kid = Integer.parseInt(jSpinner1.getValue());
//        
//    //    String total = jTextField1.getText();
//        

        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/shop", "root", "");
            pst = connect.prepareStatement("select qty from inventory where id=?");
            pst.setString(1, String.valueOf(ids));

            rs = pst.executeQuery();

            if (rs.next() == false) {
                JOptionPane.showMessageDialog(this, "Product Not Found");
                jTextField1.setText("");
            } else {
                //  String gg = rs.getString("ft");
                String tprice = rs.getString("qty");
                sq = Integer.parseInt(tprice.toString());

                nq = sq - qt;
                
                if (qt > sq ) {
                    JOptionPane.showMessageDialog(this, "Warning: Your Requested Quantity Exceded Store Qunatity ");
                }
                

                if (sq >= 21  && qt <= sq) {
                    DefaultTableModel model = new DefaultTableModel();
                    model = (DefaultTableModel) jTable1.getModel();

                    model.addRow(new Object[]{
                        jTextField1.getText(),
                        jTextField2.getText(),
                        jSpinner1.getValue().toString(),
                        jTextField3.getText(),
                        jTextField4.getText()

                    });
                    sum();

                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/shop", "root", "");
                    PreparedStatement ps = con.prepareStatement("UPDATE inventory SET  qty=? where id=?");
                    ps.setString(1, String.valueOf(nq));
                    ps.setString(2, String.valueOf(ids));

                    ps.executeUpdate();

                }

                if (sq <= 20 && sq >= 11) {
                    JOptionPane.showMessageDialog(this, "Warning: This product Quantity is less than 20 !!");
                    DefaultTableModel model = new DefaultTableModel();
                    model = (DefaultTableModel) jTable1.getModel();

                    model.addRow(new Object[]{
                        jTextField1.getText(),
                        jTextField2.getText(),
                        jSpinner1.getValue().toString(),
                        jTextField3.getText(),
                        jTextField4.getText()

                    });
                    sum();
                    
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/shop", "root", "");
                    PreparedStatement ps = con.prepareStatement("UPDATE inventory SET  qty=? where id=?");
                    ps.setString(1, String.valueOf(nq));
                    ps.setString(2, String.valueOf(ids));

                    ps.executeUpdate();
                }
                if (sq <= 10 && sq >= 1) {
                    JOptionPane.showMessageDialog(this, "Warning: This product Quantity is less than 10 !!");
                    DefaultTableModel model = new DefaultTableModel();
                    model = (DefaultTableModel) jTable1.getModel();

                    model.addRow(new Object[]{
                        jTextField1.getText(),
                        jTextField2.getText(),
                        jSpinner1.getValue().toString(),
                        jTextField3.getText(),
                        jTextField4.getText()

                    });
                    sum();
                    
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/shop", "root", "");
                    PreparedStatement ps = con.prepareStatement("UPDATE inventory SET  qty=? where id=?");
                    ps.setString(1, String.valueOf(nq));
                    ps.setString(2, String.valueOf(ids));

                    ps.executeUpdate();
                }

                if (sq <= 0 ) {
                    JOptionPane.showMessageDialog(this, "Warning: You have no Product");

//                    for (int ih = 0; i < jTable1.getRowCount(); i++) {
//                        ig++;
//                    }
//                    System.out.println("i " + i);
//
//                    //  int i = jTable1.getRowHeight();
//                    DefaultTableModel model = new DefaultTableModel();
//                    model = (DefaultTableModel) jTable1.getModel();
//                    model.removeRow(ig);
                    //         jTextField5.setText("");
                    //        model.removeRow(ids);
                }

                //          System.out.println(sal);
                //     jTextField1.setText(String.valueOf(sal));
                //   jTextField2.setText(pname.trim());
                //  jTextField3.setText(tprice.trim());
            }

//                String total = jTextField5.getText();
//                sumtotal += Integer.parseInt(total.toString());
//                int invoice = String.valueOf(gg)
//                int kprice = Integer.parseInt(jTextField3.getText());
//
//                int tot = kqty * kprice;
////                jTextField4.setText(String.valueOf(tot)); //for int to String
////                jButton1.requestFocus();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void sum() {
        int sum = 0;

        for (int i = 0; i < jTable1.getRowCount(); i++) {
            sum += Integer.parseInt(jTable1.getValueAt(i, 4).toString());

        }

        jTextField5.setText(Integer.toString(sum));
    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        if (jTextField1.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(Sales.this, "Please Enter Product Id");
            jTextField1.grabFocus();
            return;
        }
        if (jTextField2.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(Sales.this, "Please Enter Product Name");
            jTextField1.grabFocus();
            return;
        }

        if (jTextField3.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(Sales.this, "Please Enter Price");
            jTextField1.grabFocus();
            return;
        }

        if (jTextField4.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(Sales.this, "Please Enter Amount");
            jTextField1.grabFocus();
            return;
        }

        qty();

        //  sum();
        //     qty();
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");

        jTextField1.requestFocus();


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (jTextField6.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(Sales.this, "Please Enter Pay Value");
            jTextField6.grabFocus();
            return;
        }

        Balance();
        try {
            Bill();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
        }
        jButton3.requestFocus();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here

            jTextArea1.print();
            jTextField1.requestFocus();
            jTextField1.setText("");
            reset();

        } catch (PrinterException ex) {
            Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void reset() {

        DefaultTableModel dmdl = (DefaultTableModel) jTable1.getModel();
        if (jTable1.getSelectedRowCount() == 1) {
            int selectIndex = jTable1.getSelectedRow();

            dmdl.removeRow(jTable1.getSelectedRow());

        }

        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextArea1.setText("");
        //jSpinner1.setValue();

        DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
        int rowsToRemove = dm.getRowCount();
        for (int i = rowsToRemove - 1; i >= 0; i--) {
            dm.removeRow(i);
        }

        jTextField1.setText("");
        jTextField1.requestFocus();

    }


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here
        reset();

    }//GEN-LAST:event_jButton4ActionPerformed


    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel dmdl = (DefaultTableModel) jTable1.getModel();

        int selectIndex = jTable1.getSelectedRow();

        jTextField1.setText(dmdl.getValueAt(selectIndex, 0).toString());
        jTextField2.setText(dmdl.getValueAt(selectIndex, 1).toString());
        //  jSpinner1.setToolTipText(dmdl.getValueAt(selectIndex, 2).toString());
        jTextField3.setText(dmdl.getValueAt(selectIndex, 3).toString());
        jTextField4.setText(dmdl.getValueAt(selectIndex, 4).toString());

    }//GEN-LAST:event_jTable1MouseClicked

    //chek to delete row
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        // TODO add your handling code here:
        DefaultTableModel dmdl = (DefaultTableModel) jTable1.getModel();

        //  int selectIndex = jTable1.getSelectedRow();
        int dialogResult = JOptionPane.showConfirmDialog(this, "Do you want to delete the record", "Warning", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                if (jTable1.getSelectedRowCount() == 1) {
                    int selectIndex = jTable1.getSelectedRow();
                    int tt = Integer.parseInt(dmdl.getValueAt(selectIndex, 4).toString());
                    int tq = Integer.parseInt(dmdl.getValueAt(selectIndex, 2).toString());
                    int idq = Integer.parseInt(dmdl.getValueAt(selectIndex, 0).toString());

                    try {
                        Class.forName("com.mysql.jdbc.Driver");
                        connect = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/shop", "root", "");
                        pst = connect.prepareStatement("select qty from inventory where id=?");
                        pst.setString(1, String.valueOf(idq));

                        rs = pst.executeQuery();

                        if (rs.next() == false) {
                            JOptionPane.showMessageDialog(this, "Product Not Found");
                            jTextField1.setText("");
                        } else {
                            //  String gg = rs.getString("ft");
                            String tprice = rs.getString("qty");
                            int sq = Integer.parseInt(tprice.toString());

                            int nq = sq + tq;

                            if (nq <= 20 && nq > 10) {
                                JOptionPane.showMessageDialog(this, "Warning: This product Quantity is less than 20 !!");
                            }
                            if (nq <= 10 && nq > 1) {
                                JOptionPane.showMessageDialog(this, "Warning: This product Quantity is less than 10 !!");
                            }

                            if (nq == 0) {
                                JOptionPane.showMessageDialog(this, "Warning: You have no Product");

                            }

                            Class.forName("com.mysql.jdbc.Driver");
                            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/shop", "root", "");
                            PreparedStatement ps = con.prepareStatement("UPDATE inventory SET  qty=? where id=?");
                            ps.setString(1, String.valueOf(nq));
                            ps.setString(2, String.valueOf(idq));

                            ps.executeUpdate();

                            //          System.out.println(sal);
                            //     jTextField1.setText(String.valueOf(sal));
                            //   jTextField2.setText(pname.trim());
                            //  jTextField3.setText(tprice.trim());
                        }

//                String total = jTextField5.getText();
//                sumtotal += Integer.parseInt(total.toString());
//                int invoice = String.valueOf(gg)
//                int kprice = Integer.parseInt(jTextField3.getText());
//
//                int tot = kqty * kprice;
////                jTextField4.setText(String.valueOf(tot)); //for int to String
////                jButton1.requestFocus();
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    //   System.out.println(tt);
                    int sum = 0;

                    for (int i = 0; i < jTable1.getRowCount(); i++) {
                        sum += Integer.parseInt(jTable1.getValueAt(i, 4).toString());

                    }
                    sum = sum - tt;

                    jTextField5.setText(Integer.toString(sum));

                    dmdl.removeRow(jTable1.getSelectedRow());

                }
                jTextField1.requestFocus();

            } catch (Exception ex) {
                System.out.println("Exception");
            }
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");

        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            new add_product().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        new summary().setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyPressed
        // TODO add your handling code here:
//        if (evt.getKeyCode() == KeyEvent.VK_0) {
//            jTextField1.requestFocus();
//        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String pcode = jTextField6.getText();
            if (jTextField6.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(Sales.this, "Please enter your Username..");
                jTextField6.grabFocus();
                return;
            }
            Balance();
            try {
                Bill();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
            }
            jButton3.requestFocus();

        }


    }//GEN-LAST:event_jTextField6KeyPressed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_NUMPAD0) {
            reset();
        }
    }//GEN-LAST:event_jButton3KeyPressed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) jTable1.getModel();

        model.addRow(new Object[]{
            jTextField1.getText(),
            jTextField2.getText(),
            jSpinner1.getValue().toString(),
            jTextField3.getText(),
            jTextField4.getText()

        });

        sum();

        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");

        jTextField1.requestFocus();

        DefaultTableModel dmdl = (DefaultTableModel) jTable1.getModel();

        //  int selectIndex = jTable1.getSelectedRow();
        try {
            if (jTable1.getSelectedRowCount() == 1) {
                int selectIndex = jTable1.getSelectedRow();
                int tt = Integer.parseInt(dmdl.getValueAt(selectIndex, 4).toString());

                //   System.out.println(tt);
                int sum = 0;

                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    sum += Integer.parseInt(jTable1.getValueAt(i, 4).toString());

                }
                sum = sum - tt;

                jTextField5.setText(Integer.toString(sum));

                dmdl.removeRow(jTable1.getSelectedRow());

            }
            jTextField1.requestFocus();

        } catch (Exception ex) {
            System.out.println("Exception");
        }
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");


    }//GEN-LAST:event_jButton10ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton8ActionPerformed

    int invoice = 1000;

    public void Bill() throws ClassNotFoundException, SQLException {
        //   int invoice=0;
        //    int invoice=1000;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/shop", "root", "");
            pst = connect.prepareStatement("select ft from gtotal where id = 1");

            rs = pst.executeQuery();

            if (rs.next() == false) {
                JOptionPane.showMessageDialog(this, "invoice Not Found");
                jTextField1.setText("");
            } else {
                //  String gg = rs.getString("ft");
                String tprice = rs.getString("ft");
                invoice = Integer.parseInt(tprice.toString());
                invoice++;

                //   jTextField2.setText(pname.trim());
                //  jTextField3.setText(tprice.trim());
            }

//                String total = jTextField5.getText();
//                sumtotal += Integer.parseInt(total.toString());
//                int invoice = String.valueOf(gg)
//                int kprice = Integer.parseInt(jTextField3.getText());
//
//                int tot = kqty * kprice;
////                jTextField4.setText(String.valueOf(tot)); //for int to String
////                jButton1.requestFocus();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
        }

        //  invoice = invoice+1;
        String total = jTextField5.getText();
        String pay = jTextField6.getText();
        String bal = jTextField7.getText();

        DefaultTableModel model = new DefaultTableModel();

        model = (DefaultTableModel) jTable1.getModel();

        Date obj = new Date();
        String date = obj.toString();

        jTextArea1.setText(jTextArea1.getText() + "                     MIRPUR GENERAL STORE                   \n");
        jTextArea1.setText(jTextArea1.getText() + "                   Propytor: Md Kamruzzaman                   \n");
        jTextArea1.setText(jTextArea1.getText() + "                      Mobile:01776838620                   \n");
        jTextArea1.setText(jTextArea1.getText() + "               Road-7, Rupnagar, Mirpur 2, Dhaka           \n\n");
        jTextArea1.setText(jTextArea1.getText() + " Seller : " + unam + "                               \n");
        jTextArea1.setText(jTextArea1.getText() + " Invoice Id: " + invoice + "        Date : " + date + "\n\n");
        //   jTextArea1.setText(jTextArea1.getText() + "*********************************************************************\n");
        jTextArea1.setText(jTextArea1.getText() + "                         Money Reciept                    \n\n");
        jTextArea1.setText(jTextArea1.getText() + "*************************************************************************\n");

        //Heading
        jTextArea1.setText(jTextArea1.getText() + "    " + "  Product " + "         " + "Price" + "         " + "Qty" + "        " + "Amount" + "\n\n");

        for (int i = 0; i < model.getRowCount(); i++) {
            String pname = (String) model.getValueAt(i, 1);
            String qty = (String) model.getValueAt(i, 2);
            String price = (String) model.getValueAt(i, 3);
            String amount = (String) model.getValueAt(i, 4);

            jTextArea1.setText(jTextArea1.getText() + "     " + pname + "     \t" + price + "  \t      " + qty + "   \t  " + amount + "\n");

        }

        jTextArea1.setText(jTextArea1.getText() + "\n");

        jTextArea1.setText(jTextArea1.getText() + "******************************************************************************\n");
        jTextArea1.setText(jTextArea1.getText() + "\t" + "\t                       " + "Total :    " + total + " Tk" + "\n");
        jTextArea1.setText(jTextArea1.getText() + "\t" + "\t                       " + "Pay :      " + pay + " Tk" + "\n");
        jTextArea1.setText(jTextArea1.getText() + "\t" + "\t                       " + "Remain :   " + bal + " Tk" + "\n");
        jTextArea1.setText(jTextArea1.getText() + "\n");
        jTextArea1.setText(jTextArea1.getText() + "*******************************************************************************\n");
        jTextArea1.setText(jTextArea1.getText() + "                     THANK YOU, COME AGIN                 \n\n");
        jTextArea1.setText(jTextArea1.getText() + "                          Powered By                      \n");
        jTextArea1.setText(jTextArea1.getText() + "                     Matrix incorporation             \n");
        jTextArea1.setText(jTextArea1.getText() + "                  Email: matrix.inc@gmail.com             \n\n");

        // ******************** code for geting sale summary ****************
        sumTotal();

        //  jButton3.requestFocus();
        try {
            // TODO add your handling code here:

            SimpleDateFormat da = new SimpleDateFormat("dd-MM-yyyy");
            //   String date = da.format(date);

            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/shop", "root", "");
            PreparedStatement ps = con.prepareStatement("INSERT into bill(invoice,date,total,seller) values (?,?,?,?)");
            ps.setString(1, String.valueOf(invoice)); // int to string
            ps.setString(2, date);
            ps.setString(3, total);
            ps.setString(4, unam);
            //     ps.setString(4, String.valueOf(sumtotal));

            //  jTextField4.setText(String.valueOf(tot));
            ps.executeUpdate();

        } catch (Exception ex) {
            System.out.println("Exception");
        }

        //************************ code for Updating Qty in server *******************
    }

    int sumtotal = 0;

    public void sumTotal() throws ClassNotFoundException, SQLException {
        //  int rt=0;
        String total = jTextField5.getText();

        sumtotal += Integer.parseInt(total.toString());
        jTextField8.setText(String.valueOf(sumtotal));

        // System.out.println(sumtotal);
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/shop", "root", "");
        PreparedStatement ps = con.prepareStatement("UPDATE gtotal SET  gt=?,ft=? where id=1");
        ps.setString(1, String.valueOf(sumtotal));
        ps.setString(2, String.valueOf(invoice));

        ps.executeUpdate();

    }
//new summary(sumtotal).setVisible(true);
//            new summary(sumtotal).setVisible(false);

    public void Balance() {
        int total = Integer.parseInt(jTextField5.getText());
        int pay = Integer.parseInt(jTextField6.getText());

        int bal = pay - total;
        jTextField7.setText(String.valueOf(bal));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        summary tt = new summary();
        tt.sale();

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sales().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel lbName;
    // End of variables declaration//GEN-END:variables
}
